from aiogram.dispatcher import FSMContext
from aiogram.types import ContentType, Message, CallbackQuery, ParseMode, InputFile, MediaGroup
from keyboards import *
from loader import dp, bot, States, logging, dinner_sets
from config import CHAT_RECIPIENT_ID
from services.connection_db import db

__version__ = '2.2.6'


msg_to_update_group = ''  # id —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–µ–µ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤ –≤ –≥—Ä—É–ø–ø–µ


# -----------------------------------------------------------------------
def admin_in_bd(tg_id) -> bool:
    if tg_id in db.get_admins():
        return True
    return False


def user_in_bd(tg_id) -> bool:
    if str(tg_id) in db.get_users().keys():
        return True
    return False


async def reset_meal():
    logging.info('–ó–∞–ø—É—â–µ–Ω —Å–±—Ä–æ—Å –æ–±–µ–¥–æ–≤')
    db.reset_meals()
    logging.info('–°–±—Ä–æ—Å –æ–±–µ–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω')


async def update_inline_bottoms():
    logging.info('–ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫')
    dinner_sets.update_dinner_sets()
    logging.info('–ö–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')
# -----------------------------------------------------------------------


@dp.message_handler(content_types=[ContentType.NEW_CHAT_MEMBERS, ContentType.LEFT_CHAT_MEMBER])
async def on_chat_membership_change(message: Message):
    """ –î–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–∏—Ö–æ–¥—è—â–∏—Ö –∏ —É–¥–∞–ª—è–µ—Ç —É—Ö–æ–¥—è—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ """
    if message.content_type == 'new_chat_members' and not message.from_user.is_bot:
        for user in message.new_chat_members:
            user_id = user.id
            username = user.username
            first_name = user.first_name
            await message.reply(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫: ID: {user_id}, –ò–º—è: {first_name}, Username: @{username}")
            db.add_user(user_id, username, first_name)

    elif message.content_type == 'left_chat_member':
        user = message.left_chat_member
        user_id = user.id
        username = user.username
        first_name = user.first_name
        await message.reply(f"–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É: ID: {user_id}, –ò–º—è: {first_name}, Username: @{username}")
        db.remove_user(user_id)


# --------------------------- –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ ----------------------------------------------
async def show_users_admins(chat_id, user_id):
    result = '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n'
    for tg_id, data in db.get_users().items():
        username = '@None' if data[0] == 'null' else f'@{data[0]}'
        result += f'ID: <code>{tg_id}</code>, –ò–º—è: {data[1]}, {username}\n'

    result += '\n–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:\n'
    for tg_id in db.get_admins():
        result += f'ID: <code>{tg_id}</code>\n'

    result += '\n /help - –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É'

    await bot.send_message(chat_id, result, parse_mode=ParseMode.HTML, reply_markup=inline_user_manager if admin_in_bd(user_id) else None)


@dp.message_handler(commands=['start'])
async def start_command(message: Message):
    user_id = message.from_user.id
    # –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–º–∏ –∫—Ç–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if admin_in_bd(user_id) or user_in_bd(user_id):
        await message.reply(text="–ü—Ä–∏–≤–µ—Ç! –Ø OrderDinnerBot! –Ø –ø–æ–º–æ–≥—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑ –æ–±–µ–¥–æ–≤ –≤ —Ç–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. "
                                 "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ–±–æ –º–Ω–µ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /help", reply_markup=del_kb)
        if "-" not in str(message.chat.id):
            await show_users_admins(message.chat.id, user_id)
    else:
        await message.reply(text="–ü—Ä–∏–≤–µ—Ç! –Ø OrderDinnerBot! –Ø –ø–æ–º–æ–≥—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑ –æ–±–µ–¥–æ–≤ –≤ —Ç–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏.\n"
                                 "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –≤ —á–∞—Ç–µ –∑–∞–∫–∞–∑–∞ –æ–±–µ–¥–æ–≤.", reply_markup=del_kb)


@dp.message_handler(commands=['help'])
async def start_command(message: Message):
    user_id = message.from_user.id
    if admin_in_bd(user_id) and '-' not in str(message.chat.id): # –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –∞–¥–º–∏–Ω –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä—è–º–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –±–æ—Ç—É, –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ—è –æ–±—ã—á–Ω—ã–π /help
        await message.reply(f"–í–µ—Ä—Å–∏—è –±–æ—Ç–∞ - {__version__}\n"
                            f"–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥:\n"
                            "/start - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ä—É—á–Ω–æ–º—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é —Å –ë–î;\n"
                            "/photo_status - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Ñ–æ—Ç–æ, —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ;\n"
                            "/check - –í—ã–≤–æ–¥ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ —Å–¥–µ–ª–∞–≤—à–∏—Ö –∑–∞–∫–∞–∑;\n"
                            "/... - Coming soon")
    else:
        text = '''/start - –≤—ã–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
–°—Ç–∞—Ç—å—è –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - https://telegra.ph/Kak-poluchit-id-polzovatelya-10-28
/check - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Å–¥–µ–ª–∞–≤—à–∏—Ö –∑–∞–∫–∞–∑
"–ö–Ω–æ–ø–∫–æ–π "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –æ–±–µ–¥–∞" –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Ñ–æ—Ç–æ –æ–±–µ–¥–∞ –≤ –≥—Ä—É–ø–ø—É, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–æ–≤ 
–ö–Ω–æ–ø–∫–∞ "–û—á–∏—Å—Ç–∏—Ç—å –æ–±–µ–¥—ã" –æ—á–∏—â–∞–µ—Ç –æ–±–µ–¥—ã –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
'''
        await message.reply(text)


@dp.message_handler(commands=['check'])
async def start_command(message: Message):
    """ –í—ã–≤–æ–¥ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ —Å–¥–µ–ª–∞–≤—à–∏—Ö –∑–∞–∫–∞–∑ """
    user_id = message.from_user.id
    names_without_order = [user[1] for user in db.get_users().values() if user[2] == []]  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–º–µ–Ω –±–µ–∑ –∑–∞–∫–∞–∑–∞
    enum_names = [f'{index}. {user}\n' for index, user in enumerate(names_without_order, 1)]
    if admin_in_bd(user_id) or user_in_bd(user_id):
        await message.reply(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –Ω–µ —Å–¥–µ–ª–∞–≤—à–∏–µ –∑–∞–∫–∞–∑:\n{"".join(enum_names)}')
    else:
        await message.reply('–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –≤ —á–∞—Ç–µ –∑–∞–∫–∞–∑–∞ –æ–±–µ–¥–æ–≤.'
                            ' –ï—Å–ª–∏ –∂–µ –≤—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —á–∞—Ç–µ, –Ω–æ –Ω–∞–±–ª—é–¥–∞–µ—Ç–µ —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∞–º')


@dp.message_handler(commands=['photo_status'])
async def start_command(message: Message):
    """ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Ñ–æ—Ç–æ, —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ """
    user_id = message.from_user.id
    if admin_in_bd(user_id):
        media = MediaGroup()
        media.attach_photo(InputFile('downloads/order.jpg'), caption='–°–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–∫–∞–∑–∞ –æ–±–µ–¥–æ–≤')
        media.attach_photo(InputFile('downloads/cropped_order.jpg'), caption='–û–±—Ä–µ–∑–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –¥–ª—è OCR-—Å–∏—Å—Ç–µ–º—ã')
        media.attach_photo(InputFile('downloads/dinner_1.jpg'), caption='–û–±–µ–¥ –¥–Ω—è ‚Ññ1')
        media.attach_photo(InputFile('downloads/dinner_2.jpg'), caption='–û–±–µ–¥ –¥–Ω—è ‚Ññ2')
        await bot.send_media_group(chat_id=message.chat.id, media=media)
    else:
        await message.reply("–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –Ω—É–∂–Ω–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º.")
# --------------------------- –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –∫–æ–Ω–µ—Ü ----------------------------------------------


# --------------------------- –†–∞–±–æ—Ç–∞ —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ ----------------------------------------------
@dp.message_handler(text=['–û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ üö´'], state='*')
async def cancel_current_state(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return

    await message.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=del_kb)
    await state.finish()


@dp.message_handler(state=States.all_states)
async def handle_generic_operation(message: Message, state: FSMContext):
    """ –í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥–∞ –∏—Å—Ö–æ–¥—è –∏–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è """
    current_state = await state.get_state()

    if current_state == 'States:user_add':
        await handle_user_add(message, state)
    elif current_state == 'States:user_remove':
        await handle_user_remove(message, state)
    elif current_state == 'States:admin_add':
        await handle_admin_add(message, state)
    elif current_state == 'States:admin_remove':
        await handle_admin_remove(message, state)


async def handle_user_add(message: Message, state: FSMContext):
    msg = message.text.split(' ')
    tg_id, tg_username, tg_name = msg[0], msg[1].replace('@', ''), ' '.join(msg[2:])
    if db.add_user(tg_id, tg_username, tg_name) and message.from_user.is_bot is False:
        tg_username = f'@None' if tg_username == '-' else f'@{tg_username}'
        await message.reply(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {tg_id} {tg_username} {tg_name} –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=del_kb)
    else:
        await message.reply(text='–û—à–∏–±–∫–∞! –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, '
                            '–ª–∏–±–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.',
                            reply_markup=del_kb)

    await state.finish()


async def handle_user_remove(message: Message, state: FSMContext):
    if db.remove_user(message.text):
        await message.reply(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {message.text} —É–¥–∞–ª–µ–Ω', reply_markup=del_kb)
    else:
        await message.reply('–û—à–∏–±–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.', reply_markup=del_kb)

    await state.finish()


async def handle_admin_add(message: Message, state: FSMContext):
    if db.add_admin(message.text):
        await message.reply(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {message.text} —Å—Ç–∞–ª –∞–¥–º–∏–Ω–æ–º', reply_markup=del_kb)
    else:
        await message.reply('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω ID', reply_markup=del_kb)

    await state.finish()


async def handle_admin_remove(message: Message, state: FSMContext):
    if message.text == '670076879' or message.text == '917861412':
        await message.reply(f'–ë–æ–≥–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ–ª—å–∑—è', reply_markup=del_kb)
    elif db.remove_admin(message.text):
        await message.reply(f'ID {message.text} —É–±—Ä–∞–Ω –∏–∑ –∞–¥–º–∏–Ω–æ–≤', reply_markup=del_kb)
    else:
        await message.reply('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω ID –∏–ª–∏ —Ç–∞–∫–æ–≥–æ –∞–¥–º–∏–Ω–∞ –Ω–µ—Ç', reply_markup=del_kb)

    await state.finish()


@dp.message_handler(state=States.photo_to_send, content_types=ContentType.PHOTO)  # —Ç–∏–ø —Ñ–æ—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –∏–±–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–Ω–∞ –µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
async def handle_photo_resend(message: Message, state: FSMContext):
    global msg_to_update_group
    photo_id = message.photo[-1].file_id  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é (–Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞) —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é

    await reset_meal()
    await update_inline_bottoms()

    await bot.send_photo(chat_id=CHAT_RECIPIENT_ID, photo=photo_id, reply_markup=get_inline_dinner_buttons())
    msg = await bot.send_message(chat_id=CHAT_RECIPIENT_ID, text='<b>–ö—Ç–æ —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑—ã:</b>', parse_mode=ParseMode.HTML)
    msg_to_update_group = msg.message_id
    await message.reply('–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', reply_markup=del_kb)
    await bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ?', reply_markup=send_photo_yet)

    await update_message()
    await state.finish()
# --------------------------- –†–∞–±–æ—Ç–∞ —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –∫–æ–Ω–µ—Ü ----------------------------------------------


async def send_photo_and_state():
    """ –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ, —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –∫–Ω–æ–ø–æ–∫ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ """
    global msg_to_update_group

    await reset_meal()
    await update_inline_bottoms()

    logging.info('–ó–∞–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±–µ–¥–æ–≤ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é')
    media = MediaGroup()
    media.attach_photo(InputFile('downloads/dinner_1.jpg'), caption='–û–±–µ–¥ –¥–Ω—è ‚Ññ1')
    media.attach_photo(InputFile('downloads/dinner_2.jpg'), caption='–û–±–µ–¥ –¥–Ω—è ‚Ññ2')
    await bot.send_media_group(CHAT_RECIPIENT_ID, media=media)
    with open('downloads/order.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=CHAT_RECIPIENT_ID, photo=photo,
                             caption="üç≤üçùü•ó–î–æ—Å—Ç–∞–≤–∫–∞ –æ–±–µ–¥–æ–≤ü•óüçùüç≤\n–ì—Ä—É–ø–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ - @vokrugsveta_26",
                             reply_markup=get_inline_dinner_buttons())
        msg = await bot.send_message(
            chat_id=CHAT_RECIPIENT_ID,
            text='–ö—Ç–æ —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑—ã:'
        )
        msg_to_update_group = msg.message_id

    logging.info('–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
    await update_message()


async def update_message():
    new_meal = '<b>–ö—Ç–æ —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑—ã:</b>\n' + db.get_usr_meal()  # —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –≤ –≥—Ä—É–ø–ø–µ

    order_status = '<b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤:</b>\n'  # —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∞–¥–º–∏–Ω—É
    for name_meal, count in db.get_order_status().items():
        if count:
            order_status += f'{name_meal} - {count}\n'
    order_status += f'<u><i>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–±–æ—Ä–æ–≤</i></u> - {db.get_tools()}'
    try:
        await bot.edit_message_text(chat_id=CHAT_RECIPIENT_ID, message_id=msg_to_update_group,
                                    text=f'{new_meal}\n{order_status}', parse_mode=ParseMode.HTML)
    except Exception:
        logging.warning(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ msg_to_update_group -> {msg_to_update_group}')


# ----------------------- –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline –∫–Ω–æ–ø–æ–∫ ----------------------------
@dp.callback_query_handler()
async def query_add_user(call: CallbackQuery):
    call_id = call.from_user.id
    _dinner_sets = dinner_sets()

    if not user_in_bd(call_id):
        await call.answer('–í–∞—Å –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–∞ –æ–±–µ–¥–æ–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∑–∞ –∑–∞–ø—Ä–æ—Å–æ–º', show_alert=True)
        return

    messages_and_states = {
        'add_user': ('–í–≤–µ–¥–∏—Ç–µ ID username –ò–º—è —Ç–æ–≥–æ, –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å\n–ü—Ä–∏–º–µ—Ä: 454757546 @vasiliy –í–∞—Å–∏–ª–∏–π\n–£–∫–∞–∂–∏—Ç–µ " - " –µ—Å–ª–∏ –Ω–µ—Ç @username\n–ü—Ä–∏–º–µ—Ä: 454757546 - –í–∞—Å–∏–ª–∏–π', States.user_add),
        'add_admin': ('–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω—ã\n–ü—Ä–∏–º–µ—Ä: 454757546', States.admin_add),
        'remove_user': ('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å\n–ü—Ä–∏–º–µ—Ä: 454757546', States.user_remove),
        'remove_admin': ('–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –∞–¥–º–∏–Ω–æ–≤\n–ü—Ä–∏–º–µ—Ä: 454757546', States.admin_remove),
        'send_photo': ('–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ', States.photo_to_send),
    }

    if call.data == 'clear_my_meal':  # —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ–±–µ–¥ —Ç–æ–≥–æ –∫—Ç–æ –µ–≥–æ –Ω–∞–∂–∞–ª
        db.del_my_meal(call.from_user.id)
        await update_message()
        await bot.answer_callback_query(call.id)

    if call.data in str(_dinner_sets.keys()) and msg_to_update_group:  # message_to_update_group - –∑–∞—â–∏—Ç–∞ –æ—Ç –Ω–∞–∂–∞—Ç–∏—è –ø–æ —Å—Ç–∞—Ä—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º —Å –∫–Ω–æ–ø–∫–∞–º–∏
        db.set_meal(call.from_user.id, _dinner_sets.get(int(call.data)))
        await update_message()
        await bot.answer_callback_query(call.id)

    # ---------------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ ------------------------
    if not admin_in_bd(call_id): await call.answer('–í—ã –Ω–µ –∞–¥–º–∏–Ω'); return

    if call.data in messages_and_states:
        message, state = messages_and_states[call.data]
        await bot.send_message(call_id, text=message, reply_markup=cancel)
        await state.set()

    elif call.data == 'full_reset_meals':  # —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö –æ–±–µ–¥–æ–≤ –≤ –∞–¥–º–∏–Ω–∫–µ
        db.reset_meals()
        await bot.send_message(call_id, text='–í—Å–µ –æ–±–µ–¥—ã —Å–±—Ä–æ—à–µ–Ω—ã')
        await update_message()
        await bot.answer_callback_query(call.id)

    elif call.data == 'add':
        await call.message.edit_reply_markup(reply_markup=add_user_admin)
    elif call.data == 'remove':
        await call.message.edit_reply_markup(reply_markup=remove_user_admin)
    elif call.data == 'back_inline':
        await call.message.edit_reply_markup(reply_markup=inline_user_manager)
